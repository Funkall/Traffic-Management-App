{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adams\\\\OneDrive\\\\Documents\\\\traffic-management-app\\\\frontend\\\\src\\\\components\\\\MapView.js\";\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker, Polygon } from '@react-google-maps/api';\nconst MapView = () => {\n  var _mapData$signs, _mapData$cones, _mapData$barriers, _mapData$controllers, _mapData$controllerVe, _mapData$plantVehicle, _mapData$workers, _mapData$zone;\n  const [mapData, setMapData] = useState(null);\n  const mapContainerStyle = {\n    height: '500px',\n    width: '100%'\n  };\n  const center = {\n    lat: -33.8688,\n    lng: 151.2093\n  }; // Sydney as default center\n\n  useEffect(() => {\n    fetch('http://localhost:3000/api/traffic/plans/1/tgs').then(res => res.json()).then(data => setMapData(data)).catch(err => console.error('‚ùå Failed to load TGS data:', err));\n  }, []);\n  return /*#__PURE__*/React.createElement(LoadScript, {\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    center: center,\n    zoom: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, mapData === null || mapData === void 0 ? void 0 : (_mapData$signs = mapData.signs) === null || _mapData$signs === void 0 ? void 0 : _mapData$signs.map((sign, index) => /*#__PURE__*/React.createElement(Marker, {\n    key: `sign-${index}`,\n    position: {\n      lat: sign.lat,\n      lng: sign.lng\n    },\n    label: \"\\uD83D\\uDED1\",\n    title: sign.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  })), mapData === null || mapData === void 0 ? void 0 : (_mapData$cones = mapData.cones) === null || _mapData$cones === void 0 ? void 0 : _mapData$cones.map((cone, index) => /*#__PURE__*/React.createElement(Marker, {\n    key: `cone-${index}`,\n    position: {\n      lat: cone.lat,\n      lng: cone.lng\n    },\n    label: \"\\uD83D\\uDD36\",\n    title: \"Traffic Cone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  })), mapData === null || mapData === void 0 ? void 0 : (_mapData$barriers = mapData.barriers) === null || _mapData$barriers === void 0 ? void 0 : _mapData$barriers.map((barrier, index) => /*#__PURE__*/React.createElement(Marker, {\n    key: `barrier-${index}`,\n    position: {\n      lat: barrier.lat,\n      lng: barrier.lng\n    },\n    label: \"\\uD83E\\uDDF1\",\n    title: \"Barrier\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  })), mapData === null || mapData === void 0 ? void 0 : (_mapData$controllers = mapData.controllers) === null || _mapData$controllers === void 0 ? void 0 : _mapData$controllers.map((controller, index) => /*#__PURE__*/React.createElement(Marker, {\n    key: `controller-${index}`,\n    position: {\n      lat: controller.lat,\n      lng: controller.lng\n    },\n    label: \"\\uD83D\\uDEA6\",\n    title: controller.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  })), mapData === null || mapData === void 0 ? void 0 : (_mapData$controllerVe = mapData.controllerVehicles) === null || _mapData$controllerVe === void 0 ? void 0 : _mapData$controllerVe.map((vehicle, index) => /*#__PURE__*/React.createElement(Marker, {\n    key: `controller-vehicle-${index}`,\n    position: {\n      lat: vehicle.lat,\n      lng: vehicle.lng\n    },\n    label: \"\\uD83D\\uDE90\",\n    title: vehicle.vehicleId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })), mapData === null || mapData === void 0 ? void 0 : (_mapData$plantVehicle = mapData.plantVehicles) === null || _mapData$plantVehicle === void 0 ? void 0 : _mapData$plantVehicle.map((plant, index) => /*#__PURE__*/React.createElement(Marker, {\n    key: `plant-${index}`,\n    position: {\n      lat: plant.lat,\n      lng: plant.lng\n    },\n    label: \"\\uD83D\\uDE9C\",\n    title: plant.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  })), mapData === null || mapData === void 0 ? void 0 : (_mapData$workers = mapData.workers) === null || _mapData$workers === void 0 ? void 0 : _mapData$workers.map((worker, index) => /*#__PURE__*/React.createElement(Marker, {\n    key: `worker-${index}`,\n    position: {\n      lat: worker.lat,\n      lng: worker.lng\n    },\n    label: \"\\uD83D\\uDC77\",\n    title: worker.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  })), (mapData === null || mapData === void 0 ? void 0 : (_mapData$zone = mapData.zone) === null || _mapData$zone === void 0 ? void 0 : _mapData$zone.length) > 0 && /*#__PURE__*/React.createElement(Polygon, {\n    paths: mapData.zone,\n    options: {\n      fillColor: '#00ff00',\n      fillOpacity: 0.2,\n      strokeColor: '#008000',\n      strokeOpacity: 0.6,\n      strokeWeight: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  })));\n};\nexport default MapView;","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","Polygon","MapView","_mapData$signs","_mapData$cones","_mapData$barriers","_mapData$controllers","_mapData$controllerVe","_mapData$plantVehicle","_mapData$workers","_mapData$zone","mapData","setMapData","mapContainerStyle","height","width","center","lat","lng","fetch","then","res","json","data","catch","err","console","error","createElement","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","zoom","signs","map","sign","index","key","position","label","title","type","cones","cone","barriers","barrier","controllers","controller","name","controllerVehicles","vehicle","vehicleId","plantVehicles","plant","workers","worker","zone","length","paths","options","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight"],"sources":["C:/Users/adams/OneDrive/Documents/traffic-management-app/frontend/src/components/MapView.js"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker, Polygon } from '@react-google-maps/api';\n\nconst MapView = () => {\n    const [mapData, setMapData] = useState(null);\n    const mapContainerStyle = {\n        height: '500px',\n        width: '100%',\n    };\n\n    const center = { lat: -33.8688, lng: 151.2093 }; // Sydney as default center\n\n    useEffect(() => {\n        fetch('http://localhost:3000/api/traffic/plans/1/tgs')\n            .then((res) => res.json())\n            .then((data) => setMapData(data))\n            .catch((err) => console.error('‚ùå Failed to load TGS data:', err));\n    }, []);\n\n    return (\n        <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}>\n            <GoogleMap mapContainerStyle={mapContainerStyle} center={center} zoom={16}>\n                {mapData?.signs?.map((sign, index) => (\n                    <Marker\n                        key={`sign-${index}`}\n                        position={{ lat: sign.lat, lng: sign.lng }}\n                        label=\"üõë\"\n                        title={sign.type}\n                    />\n                ))}\n                {mapData?.cones?.map((cone, index) => (\n                    <Marker\n                        key={`cone-${index}`}\n                        position={{ lat: cone.lat, lng: cone.lng }}\n                        label=\"üî∂\"\n                        title=\"Traffic Cone\"\n                    />\n                ))}\n                {mapData?.barriers?.map((barrier, index) => (\n                    <Marker\n                        key={`barrier-${index}`}\n                        position={{ lat: barrier.lat, lng: barrier.lng }}\n                        label=\"üß±\"\n                        title=\"Barrier\"\n                    />\n                ))}\n                {mapData?.controllers?.map((controller, index) => (\n                    <Marker\n                        key={`controller-${index}`}\n                        position={{ lat: controller.lat, lng: controller.lng }}\n                        label=\"üö¶\"\n                        title={controller.name}\n                    />\n                ))}\n                {mapData?.controllerVehicles?.map((vehicle, index) => (\n                    <Marker\n                        key={`controller-vehicle-${index}`}\n                        position={{ lat: vehicle.lat, lng: vehicle.lng }}\n                        label=\"üöê\"\n                        title={vehicle.vehicleId}\n                    />\n                ))}\n                {mapData?.plantVehicles?.map((plant, index) => (\n                    <Marker\n                        key={`plant-${index}`}\n                        position={{ lat: plant.lat, lng: plant.lng }}\n                        label=\"üöú\"\n                        title={plant.type}\n                    />\n                ))}\n                {mapData?.workers?.map((worker, index) => (\n                    <Marker\n                        key={`worker-${index}`}\n                        position={{ lat: worker.lat, lng: worker.lng }}\n                        label=\"üë∑\"\n                        title={worker.name}\n                    />\n                ))}\n                {mapData?.zone?.length > 0 && (\n                    <Polygon\n                        paths={mapData.zone}\n                        options={{\n                            fillColor: '#00ff00',\n                            fillOpacity: 0.2,\n                            strokeColor: '#008000',\n                            strokeOpacity: 0.6,\n                            strokeWeight: 2,\n                        }}\n                    />\n                )}\n            </GoogleMap>\n        </LoadScript>\n    );\n};\n\nexport default MapView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adams\\\\OneDrive\\\\Documents\\\\traffic-management-app\\\\frontend\\\\src\\\\components\\\\MapView.js\";\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker, Polygon } from '@react-google-maps/api';\nconst containerStyle = {\n  width: '100%',\n  height: '500px'\n};\nconst center = {\n  lat: -33.8688,\n  lng: 151.2093\n};\nconst MapView = () => {\n  const [tgs, setTgs] = useState(null);\n  useEffect(() => {\n    const fetchTGS = async () => {\n      try {\n        const res = await fetch('/api/traffic/plans/1/tgs');\n        const data = await res.json();\n        setTgs(data);\n      } catch (err) {\n        console.error('Failed to load TGS:', err);\n      }\n    };\n    fetchTGS();\n  }, []);\n  return /*#__PURE__*/React.createElement(LoadScript, {\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, tgs && tgs.signs.map((s, idx) => /*#__PURE__*/React.createElement(Marker, {\n    key: idx,\n    position: {\n      lat: s.lat,\n      lng: s.lng\n    },\n    label: s.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  })), tgs && tgs.cones.map((c, idx) => /*#__PURE__*/React.createElement(Marker, {\n    key: `cone-${idx}`,\n    position: c,\n    label: \"Cone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  })), tgs && tgs.barriers.map((b, idx) => /*#__PURE__*/React.createElement(Marker, {\n    key: `barrier-${idx}`,\n    position: b,\n    label: \"Barrier\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  })), tgs && tgs.controllers.map((c, idx) => /*#__PURE__*/React.createElement(Marker, {\n    key: `ctrl-${idx}`,\n    position: {\n      lat: c.lat,\n      lng: c.lng\n    },\n    label: c.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  })), tgs && tgs.controllerVehicles.map((v, idx) => /*#__PURE__*/React.createElement(Marker, {\n    key: `veh-${idx}`,\n    position: {\n      lat: v.lat,\n      lng: v.lng\n    },\n    label: v.vehicleId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  })), tgs && tgs.plantVehicles.map((p, idx) => /*#__PURE__*/React.createElement(Marker, {\n    key: `plant-${idx}`,\n    position: {\n      lat: p.lat,\n      lng: p.lng\n    },\n    label: p.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  })), tgs && tgs.workers.map((w, idx) => /*#__PURE__*/React.createElement(Marker, {\n    key: `worker-${idx}`,\n    position: {\n      lat: w.lat,\n      lng: w.lng\n    },\n    label: w.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  })), tgs && tgs.zone && /*#__PURE__*/React.createElement(Polygon, {\n    paths: tgs.zone,\n    options: {\n      fillColor: '#FF0000',\n      fillOpacity: 0.2,\n      strokeColor: '#FF0000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  })));\n};\nexport default MapView;","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","Polygon","containerStyle","width","height","center","lat","lng","MapView","tgs","setTgs","fetchTGS","res","fetch","data","json","err","console","error","createElement","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","zoom","signs","map","s","idx","key","position","label","type","cones","c","barriers","b","controllers","name","controllerVehicles","v","vehicleId","plantVehicles","p","workers","w","zone","paths","options","fillColor","fillOpacity","strokeColor"],"sources":["C:/Users/adams/OneDrive/Documents/traffic-management-app/frontend/src/components/MapView.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker, Polygon } from '@react-google-maps/api';\n\nconst containerStyle = {\n    width: '100%',\n    height: '500px'\n};\n\nconst center = {\n    lat: -33.8688,\n    lng: 151.2093\n};\n\nconst MapView = () => {\n    const [tgs, setTgs] = useState(null);\n\n    useEffect(() => {\n        const fetchTGS = async () => {\n            try {\n                const res = await fetch('/api/traffic/plans/1/tgs');\n                const data = await res.json();\n                setTgs(data);\n            } catch (err) {\n                console.error('Failed to load TGS:', err);\n            }\n        };\n\n        fetchTGS();\n    }, []);\n\n    return (\n        <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}>\n            <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={15}>\n                {tgs && tgs.signs.map((s, idx) => (\n                    <Marker key={idx} position={{ lat: s.lat, lng: s.lng }} label={s.type} />\n                ))}\n                {tgs && tgs.cones.map((c, idx) => (\n                    <Marker key={`cone-${idx}`} position={c} label=\"Cone\" />\n                ))}\n                {tgs && tgs.barriers.map((b, idx) => (\n                    <Marker key={`barrier-${idx}`} position={b} label=\"Barrier\" />\n                ))}\n                {tgs && tgs.controllers.map((c, idx) => (\n                    <Marker key={`ctrl-${idx}`} position={{ lat: c.lat, lng: c.lng }} label={c.name} />\n                ))}\n                {tgs && tgs.controllerVehicles.map((v, idx) => (\n                    <Marker key={`veh-${idx}`} position={{ lat: v.lat, lng: v.lng }} label={v.vehicleId} />\n                ))}\n                {tgs && tgs.plantVehicles.map((p, idx) => (\n                    <Marker key={`plant-${idx}`} position={{ lat: p.lat, lng: p.lng }} label={p.type} />\n                ))}\n                {tgs && tgs.workers.map((w, idx) => (\n                    <Marker key={`worker-${idx}`} position={{ lat: w.lat, lng: w.lng }} label={w.name} />\n                ))}\n                {tgs && tgs.zone && (\n                    <Polygon paths={tgs.zone} options={{ fillColor: '#FF0000', fillOpacity: 0.2, strokeColor: '#FF0000' }} />\n                )}\n            </GoogleMap>\n        </LoadScript>\n    );\n};\n\nexport default MapView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
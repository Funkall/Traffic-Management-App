{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adams\\\\OneDrive\\\\Documents\\\\traffic-management-app\\\\frontend\\\\src\\\\components\\\\MapView.js\";\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker, Polygon } from '@react-google-maps/api';\nimport axios from 'axios';\nconst containerStyle = {\n  width: '100%',\n  height: '500px'\n};\nconst center = {\n  lat: -33.869,\n  lng: 151.208\n};\nfunction MapView() {\n  const [mapData, setMapData] = useState(null);\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n  useEffect(() => {\n    axios.get('http://localhost:3000/api/traffic/plans/1/tgs').then(response => setMapData(response.data)).catch(error => console.error(\"Error loading TGS data:\", error));\n  }, []);\n  return isLoaded ? /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, mapData && mapData.signs.map((sign, index) => /*#__PURE__*/React.createElement(Marker, {\n    key: `sign-${index}`,\n    position: {\n      lat: sign.lat,\n      lng: sign.lng\n    },\n    label: \"S\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), mapData && mapData.cones.map((cone, index) => /*#__PURE__*/React.createElement(Marker, {\n    key: `cone-${index}`,\n    position: {\n      lat: cone.lat,\n      lng: cone.lng\n    },\n    label: \"C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), mapData && mapData.barriers.map((barrier, index) => /*#__PURE__*/React.createElement(Marker, {\n    key: `barrier-${index}`,\n    position: {\n      lat: barrier.lat,\n      lng: barrier.lng\n    },\n    label: \"B\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), mapData && mapData.controllers.map((ctrl, index) => /*#__PURE__*/React.createElement(Marker, {\n    key: `ctrl-${index}`,\n    position: {\n      lat: ctrl.lat,\n      lng: ctrl.lng\n    },\n    label: \"TC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), mapData && mapData.controllerVehicles.map((vehicle, index) => /*#__PURE__*/React.createElement(Marker, {\n    key: `vehicle-${index}`,\n    position: {\n      lat: vehicle.lat,\n      lng: vehicle.lng\n    },\n    label: \"V\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })), mapData && mapData.plantVehicles.map((plant, index) => /*#__PURE__*/React.createElement(Marker, {\n    key: `plant-${index}`,\n    position: {\n      lat: plant.lat,\n      lng: plant.lng\n    },\n    label: \"P\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), mapData && mapData.workers.map((worker, index) => /*#__PURE__*/React.createElement(Marker, {\n    key: `worker-${index}`,\n    position: {\n      lat: worker.lat,\n      lng: worker.lng\n    },\n    label: \"W\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), mapData && /*#__PURE__*/React.createElement(Polygon, {\n    paths: mapData.zone,\n    options: {\n      fillColor: '#FF0000',\n      fillOpacity: 0.1,\n      strokeColor: '#FF0000',\n      strokeOpacity: 0.8,\n      strokeWeight: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}\nexport default React.memo(MapView);","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","useJsApiLoader","Marker","Polygon","axios","containerStyle","width","height","center","lat","lng","MapView","mapData","setMapData","isLoaded","id","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","get","then","response","data","catch","error","console","createElement","mapContainerStyle","zoom","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","signs","map","sign","index","key","position","label","cones","cone","barriers","barrier","controllers","ctrl","controllerVehicles","vehicle","plantVehicles","plant","workers","worker","paths","zone","options","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","Fragment","memo"],"sources":["C:/Users/adams/OneDrive/Documents/traffic-management-app/frontend/src/components/MapView.js"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker, Polygon } from '@react-google-maps/api';\nimport axios from 'axios';\n\nconst containerStyle = {\n  width: '100%',\n  height: '500px'\n};\n\nconst center = {\n  lat: -33.869,\n  lng: 151.208\n};\n\nfunction MapView() {\n  const [mapData, setMapData] = useState(null);\n\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n\n  useEffect(() => {\n    axios.get('http://localhost:3000/api/traffic/plans/1/tgs')\n      .then(response => setMapData(response.data))\n      .catch(error => console.error(\"Error loading TGS data:\", error));\n  }, []);\n\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={center}\n      zoom={16}\n    >\n      {mapData && mapData.signs.map((sign, index) => (\n        <Marker key={`sign-${index}`} position={{ lat: sign.lat, lng: sign.lng }} label=\"S\" />\n      ))}\n      {mapData && mapData.cones.map((cone, index) => (\n        <Marker key={`cone-${index}`} position={{ lat: cone.lat, lng: cone.lng }} label=\"C\" />\n      ))}\n      {mapData && mapData.barriers.map((barrier, index) => (\n        <Marker key={`barrier-${index}`} position={{ lat: barrier.lat, lng: barrier.lng }} label=\"B\" />\n      ))}\n      {mapData && mapData.controllers.map((ctrl, index) => (\n        <Marker key={`ctrl-${index}`} position={{ lat: ctrl.lat, lng: ctrl.lng }} label=\"TC\" />\n      ))}\n      {mapData && mapData.controllerVehicles.map((vehicle, index) => (\n        <Marker key={`vehicle-${index}`} position={{ lat: vehicle.lat, lng: vehicle.lng }} label=\"V\" />\n      ))}\n      {mapData && mapData.plantVehicles.map((plant, index) => (\n        <Marker key={`plant-${index}`} position={{ lat: plant.lat, lng: plant.lng }} label=\"P\" />\n      ))}\n      {mapData && mapData.workers.map((worker, index) => (\n        <Marker key={`worker-${index}`} position={{ lat: worker.lat, lng: worker.lng }} label=\"W\" />\n      ))}\n      {mapData && (\n        <Polygon\n          paths={mapData.zone}\n          options={{\n            fillColor: '#FF0000',\n            fillOpacity: 0.1,\n            strokeColor: '#FF0000',\n            strokeOpacity: 0.8,\n            strokeWeight: 2\n          }}\n        />\n      )}\n    </GoogleMap>\n  ) : <></>;\n}\n\nexport default React.memo(MapView);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
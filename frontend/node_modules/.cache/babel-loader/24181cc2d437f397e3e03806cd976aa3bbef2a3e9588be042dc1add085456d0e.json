{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adams\\\\OneDrive\\\\Documents\\\\traffic-management-app\\\\frontend\\\\src\\\\components\\\\MapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker, Polygon } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '500px'\n};\nconst center = {\n  lat: -33.869,\n  lng: 151.208\n};\nfunction MapView() {\n  _s();\n  const [mapData, setMapData] = useState(null);\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n  useEffect(() => {\n    axios.get('http://localhost:3000/api/traffic/plans/1/tgs').then(response => setMapData(response.data)).catch(error => console.error(\"Error loading TGS data:\", error));\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 16,\n    children: [mapData && mapData.signs.map((sign, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: sign.lat,\n        lng: sign.lng\n      },\n      label: \"S\"\n    }, `sign-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)), mapData && mapData.cones.map((cone, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: cone.lat,\n        lng: cone.lng\n      },\n      label: \"C\"\n    }, `cone-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)), mapData && mapData.barriers.map((barrier, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: barrier.lat,\n        lng: barrier.lng\n      },\n      label: \"B\"\n    }, `barrier-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)), mapData && mapData.controllers.map((ctrl, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: ctrl.lat,\n        lng: ctrl.lng\n      },\n      label: \"TC\"\n    }, `ctrl-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)), mapData && mapData.controllerVehicles.map((vehicle, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: vehicle.lat,\n        lng: vehicle.lng\n      },\n      label: \"V\"\n    }, `vehicle-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)), mapData && mapData.plantVehicles.map((plant, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: plant.lat,\n        lng: plant.lng\n      },\n      label: \"P\"\n    }, `plant-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)), mapData && mapData.workers.map((worker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: worker.lat,\n        lng: worker.lng\n      },\n      label: \"W\"\n    }, `worker-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)), mapData && /*#__PURE__*/_jsxDEV(Polygon, {\n      paths: mapData.zone,\n      options: {\n        fillColor: '#FF0000',\n        fillOpacity: 0.1,\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeWeight: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(MapView, \"ydi5vT8ho+kh6iRLs9/y5ix9xZo=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = MapView;\nexport default _c2 = /*#__PURE__*/React.memo(MapView);\nvar _c, _c2;\n$RefreshReg$(_c, \"MapView\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","useJsApiLoader","Marker","Polygon","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","center","lat","lng","MapView","_s","mapData","setMapData","isLoaded","id","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","get","then","response","data","catch","error","console","mapContainerStyle","zoom","children","signs","map","sign","index","position","label","fileName","_jsxFileName","lineNumber","columnNumber","cones","cone","barriers","barrier","controllers","ctrl","controllerVehicles","vehicle","plantVehicles","plant","workers","worker","paths","zone","options","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/adams/OneDrive/Documents/traffic-management-app/frontend/src/components/MapView.js"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker, Polygon } from '@react-google-maps/api';\nimport axios from 'axios';\n\nconst containerStyle = {\n  width: '100%',\n  height: '500px'\n};\n\nconst center = {\n  lat: -33.869,\n  lng: 151.208\n};\n\nfunction MapView() {\n  const [mapData, setMapData] = useState(null);\n\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n\n  useEffect(() => {\n    axios.get('http://localhost:3000/api/traffic/plans/1/tgs')\n      .then(response => setMapData(response.data))\n      .catch(error => console.error(\"Error loading TGS data:\", error));\n  }, []);\n\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={center}\n      zoom={16}\n    >\n      {mapData && mapData.signs.map((sign, index) => (\n        <Marker key={`sign-${index}`} position={{ lat: sign.lat, lng: sign.lng }} label=\"S\" />\n      ))}\n      {mapData && mapData.cones.map((cone, index) => (\n        <Marker key={`cone-${index}`} position={{ lat: cone.lat, lng: cone.lng }} label=\"C\" />\n      ))}\n      {mapData && mapData.barriers.map((barrier, index) => (\n        <Marker key={`barrier-${index}`} position={{ lat: barrier.lat, lng: barrier.lng }} label=\"B\" />\n      ))}\n      {mapData && mapData.controllers.map((ctrl, index) => (\n        <Marker key={`ctrl-${index}`} position={{ lat: ctrl.lat, lng: ctrl.lng }} label=\"TC\" />\n      ))}\n      {mapData && mapData.controllerVehicles.map((vehicle, index) => (\n        <Marker key={`vehicle-${index}`} position={{ lat: vehicle.lat, lng: vehicle.lng }} label=\"V\" />\n      ))}\n      {mapData && mapData.plantVehicles.map((plant, index) => (\n        <Marker key={`plant-${index}`} position={{ lat: plant.lat, lng: plant.lng }} label=\"P\" />\n      ))}\n      {mapData && mapData.workers.map((worker, index) => (\n        <Marker key={`worker-${index}`} position={{ lat: worker.lat, lng: worker.lng }} label=\"W\" />\n      ))}\n      {mapData && (\n        <Polygon\n          paths={mapData.zone}\n          options={{\n            fillColor: '#FF0000',\n            fillOpacity: 0.1,\n            strokeColor: '#FF0000',\n            strokeOpacity: 0.8,\n            strokeWeight: 2\n          }}\n        />\n      )}\n    </GoogleMap>\n  ) : <></>;\n}\n\nexport default React.memo(MapView);\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,cAAc,EAAEC,MAAM,EAAEC,OAAO,QAAQ,wBAAwB;AACnF,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,CAAC,MAAM;EACZC,GAAG,EAAE;AACP,CAAC;AAED,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAM;IAAEoB;EAAS,CAAC,GAAGlB,cAAc,CAAC;IAClCmB,EAAE,EAAE,mBAAmB;IACvBC,gBAAgB,EAAEC,OAAO,CAACC,GAAG,CAACC;EAChC,CAAC,CAAC;EAEF1B,SAAS,CAAC,MAAM;IACdM,KAAK,CAACqB,GAAG,CAAC,+CAA+C,CAAC,CACvDC,IAAI,CAACC,QAAQ,IAAIT,UAAU,CAACS,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC3CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOX,QAAQ,gBACbb,OAAA,CAACN,SAAS;IACRgC,iBAAiB,EAAEvB,cAAe;IAClCG,MAAM,EAAEA,MAAO;IACfqB,IAAI,EAAE,EAAG;IAAAC,QAAA,GAERjB,OAAO,IAAIA,OAAO,CAACkB,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxChC,OAAA,CAACJ,MAAM;MAAuBqC,QAAQ,EAAE;QAAE1B,GAAG,EAAEwB,IAAI,CAACxB,GAAG;QAAEC,GAAG,EAAEuB,IAAI,CAACvB;MAAI,CAAE;MAAC0B,KAAK,EAAC;IAAG,GAAtE,QAAQF,KAAK,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAyD,CACtF,CAAC,EACD3B,OAAO,IAAIA,OAAO,CAAC4B,KAAK,CAACT,GAAG,CAAC,CAACU,IAAI,EAAER,KAAK,kBACxChC,OAAA,CAACJ,MAAM;MAAuBqC,QAAQ,EAAE;QAAE1B,GAAG,EAAEiC,IAAI,CAACjC,GAAG;QAAEC,GAAG,EAAEgC,IAAI,CAAChC;MAAI,CAAE;MAAC0B,KAAK,EAAC;IAAG,GAAtE,QAAQF,KAAK,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAyD,CACtF,CAAC,EACD3B,OAAO,IAAIA,OAAO,CAAC8B,QAAQ,CAACX,GAAG,CAAC,CAACY,OAAO,EAAEV,KAAK,kBAC9ChC,OAAA,CAACJ,MAAM;MAA0BqC,QAAQ,EAAE;QAAE1B,GAAG,EAAEmC,OAAO,CAACnC,GAAG;QAAEC,GAAG,EAAEkC,OAAO,CAAClC;MAAI,CAAE;MAAC0B,KAAK,EAAC;IAAG,GAA/E,WAAWF,KAAK,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA+D,CAC/F,CAAC,EACD3B,OAAO,IAAIA,OAAO,CAACgC,WAAW,CAACb,GAAG,CAAC,CAACc,IAAI,EAAEZ,KAAK,kBAC9ChC,OAAA,CAACJ,MAAM;MAAuBqC,QAAQ,EAAE;QAAE1B,GAAG,EAAEqC,IAAI,CAACrC,GAAG;QAAEC,GAAG,EAAEoC,IAAI,CAACpC;MAAI,CAAE;MAAC0B,KAAK,EAAC;IAAI,GAAvE,QAAQF,KAAK,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA0D,CACvF,CAAC,EACD3B,OAAO,IAAIA,OAAO,CAACkC,kBAAkB,CAACf,GAAG,CAAC,CAACgB,OAAO,EAAEd,KAAK,kBACxDhC,OAAA,CAACJ,MAAM;MAA0BqC,QAAQ,EAAE;QAAE1B,GAAG,EAAEuC,OAAO,CAACvC,GAAG;QAAEC,GAAG,EAAEsC,OAAO,CAACtC;MAAI,CAAE;MAAC0B,KAAK,EAAC;IAAG,GAA/E,WAAWF,KAAK,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA+D,CAC/F,CAAC,EACD3B,OAAO,IAAIA,OAAO,CAACoC,aAAa,CAACjB,GAAG,CAAC,CAACkB,KAAK,EAAEhB,KAAK,kBACjDhC,OAAA,CAACJ,MAAM;MAAwBqC,QAAQ,EAAE;QAAE1B,GAAG,EAAEyC,KAAK,CAACzC,GAAG;QAAEC,GAAG,EAAEwC,KAAK,CAACxC;MAAI,CAAE;MAAC0B,KAAK,EAAC;IAAG,GAAzE,SAASF,KAAK,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2D,CACzF,CAAC,EACD3B,OAAO,IAAIA,OAAO,CAACsC,OAAO,CAACnB,GAAG,CAAC,CAACoB,MAAM,EAAElB,KAAK,kBAC5ChC,OAAA,CAACJ,MAAM;MAAyBqC,QAAQ,EAAE;QAAE1B,GAAG,EAAE2C,MAAM,CAAC3C,GAAG;QAAEC,GAAG,EAAE0C,MAAM,CAAC1C;MAAI,CAAE;MAAC0B,KAAK,EAAC;IAAG,GAA5E,UAAUF,KAAK,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA6D,CAC5F,CAAC,EACD3B,OAAO,iBACNX,OAAA,CAACH,OAAO;MACNsD,KAAK,EAAExC,OAAO,CAACyC,IAAK;MACpBC,OAAO,EAAE;QACPC,SAAS,EAAE,SAAS;QACpBC,WAAW,EAAE,GAAG;QAChBC,WAAW,EAAE,SAAS;QACtBC,aAAa,EAAE,GAAG;QAClBC,YAAY,EAAE;MAChB;IAAE;MAAAvB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC,gBACVtC,OAAA,CAAAE,SAAA,mBAAI,CAAC;AACX;AAACQ,EAAA,CAvDQD,OAAO;EAAA,QAGOd,cAAc;AAAA;AAAAgE,EAAA,GAH5BlD,OAAO;AAyDhB,eAAAmD,GAAA,gBAAerE,KAAK,CAACsE,IAAI,CAACpD,OAAO,CAAC;AAAC,IAAAkD,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}